// Code generated by excelconfc. DO NOT EDIT.
// source:
//   file: ExcelConfTest.xlsx
//   sheet: ArrayAndBDTVecConf

package excelconf

import (
	"encoding/json"
	"os"
)

type IntStruct struct {
	IVec   []int32 `json:"iVec,omitempty"`
	IArray int32   `json:"iArray,omitempty"`
}

type ArrayAndBDTVecConf struct {
	Id        int32       `json:"id,omitempty"`
	IntVec    []int32     `json:"intVec,omitempty"`
	IntArray  int32       `json:"intArray,omitempty"`
	IntStruct []IntStruct `json:"intStruct,omitempty"`
}

type ArrayAndBDTVecConfMap map[int32]*ArrayAndBDTVecConf

func (s ArrayAndBDTVecConfMap) LoadFromJsonFile(filePath string) error {
	fileBytes, err := os.ReadFile(filePath)
	if err != nil {
		return err
	}
	jsonData := struct {
		Data []ArrayAndBDTVecConf `json:"data"`
	}{}
	json.Unmarshal(fileBytes, &jsonData)
	for _, conf := range jsonData.Data {
		s[conf.Id] = &conf
	}
	return nil
}

func (s ArrayAndBDTVecConfMap) GetVal(key int32) *ArrayAndBDTVecConf {
	return s[key]
}

var instanceArrayAndBDTVecConfMap = make(ArrayAndBDTVecConfMap)

func GetArrayAndBDTVecConfMapInst() ArrayAndBDTVecConfMap {
	return instanceArrayAndBDTVecConfMap
}
